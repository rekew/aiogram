from aiogram import Bot, Dispatcher, F
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from aiogram.filters import Command
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
import asyncio

bot = Bot(token='8097487442:AAHKVvqATwOCPxBZ8Fb9Gm0gw9iKsMK5eto')
dp = Dispatcher()

class Form(StatesGroup):
    name = State()
    birth_date = State()
    gender = State()
    city = State()
    height_weight = State()
    acting_experience = State()
    acting_experience_detail = State()
    appearance = State()
    skills = State()
    photos = State()
    video = State()
    contacts = State()

gender_kb = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–ú—É–∂—á–∏–Ω–∞"), KeyboardButton(text="–ñ–µ–Ω—â–∏–Ω–∞"), KeyboardButton(text="–î—Ä—É–≥–æ–π")]
    ],
    resize_keyboard=True
)

experience_kb = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–î–∞"), KeyboardButton(text="–ù–µ—Ç")]
    ],
    resize_keyboard=True
)

skip_kb = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å")]
    ],
    resize_keyboard=True
)


@dp.message(Command('start'))
async def start_bot(message: Message):
    start_keyboard = ReplyKeyboardMarkup(keyboard=[
        [KeyboardButton(text='–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É')]
    ], resize_keyboard=True)
    await message.answer('–ü—Ä–∏–≤–µ—Ç!', reply_markup=start_keyboard)

@dp.message(F.text == '–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É')
async def state_start(msg: Message, state: FSMContext):
    await msg.answer('–í–≤–µ–¥–∏ —Å–≤–æ—ë *–ò–º—è –∏ –§–∞–º–∏–ª–∏—é*.', parse_mode='Markdown', reply_markup=ReplyKeyboardRemove())
    await state.set_state(Form.name)

@dp.message(Form.name)
async def process_name(msg: Message, state: FSMContext):
    await state.update_data(name=msg.text)
    await msg.answer('üìÖ –£–∫–∞–∂–∏ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è (–≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì)')
    await state.set_state(Form.birth_date)

@dp.message(Form.birth_date)
async def process_birth_date(msg: Message, state: FSMContext):
    await state.update_data(birth_date=msg.text)
    await msg.answer("üöª –í—ã–±–µ—Ä–∏ –ø–æ–ª:", reply_markup=gender_kb)
    await state.set_state(Form.gender)

@dp.message(Form.gender)
async def process_gender(msg: Message, state: FSMContext):
    await state.update_data(gender=msg.text)
    await msg.answer('üèô –í –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ —Ç—ã –∂–∏–≤—ë—à—å?', reply_markup=ReplyKeyboardRemove())
    await state.set_state(Form.city)

@dp.message(Form.city)
async def process_city(msg: Message, state: FSMContext):
    await state.update_data(city=msg.text)
    await msg.answer('üìè –í–≤–µ–¥–∏ —Å–≤–æ–π —Ä–æ—Å—Ç –∏ –≤–µ—Å (–Ω–∞–ø—Ä–∏–º–µ—Ä: 175 —Å–º, 70 –∫–≥)')
    await state.set_state(Form.height_weight)

@dp.message(Form.height_weight)
async def process_height_weight(msg: Message, state: FSMContext):
    await state.update_data(height_weight=msg.text)
    await msg.answer('üé≠ –ï—Å—Ç—å –ª–∏ —É —Ç–µ–±—è –∞–∫—Ç—ë—Ä—Å–∫–∏–π –æ–ø—ã—Ç?', reply_markup=experience_kb)
    await state.set_state(Form.acting_experience)

@dp.message(Form.acting_experience)
async def process_experience(msg: Message, state: FSMContext):
    if msg.text == '–î–∞':
        await msg.answer('–û–ø–∏—à–∏ —Å–≤–æ–π –∞–∫—Ç–µ—Ä—Å–∫–∏–π –æ–ø—ã—Ç (–ø—Ä–∏–º–µ—Ä—ã —Ä–∞–±–æ—Ç)', reply_markup=ReplyKeyboardRemove())
        await state.set_state(Form.acting_experience_detail)
    else:
        await state.update_data(acting_experience="–ù–µ—Ç")  
        await msg.answer('–û–∫–µ–π, –¥–≤–∏–≥–∞–µ–º—Å—è –¥–∞–ª—å—à–µ', reply_markup=ReplyKeyboardRemove())
        await msg.answer('üßè‚Äç‚ôÇÔ∏è –ï—Å—Ç—å –ª–∏ —É —Ç–µ–±—è –æ—Å–æ–±—ã–µ –≤–Ω–µ—à–Ω–∏–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏? (–®—Ä–∞–º—ã, –±–æ—Ä–æ–¥–∞ –∏ —Ç. –¥.)')
        await state.set_state(Form.appearance)

@dp.message(Form.acting_experience_detail)
async def process_experience_text(msg: Message, state: FSMContext):
    await state.update_data(acting_experience=msg.text)  
    await msg.answer('üßè‚Äç‚ôÇÔ∏è –ï—Å—Ç—å –ª–∏ —É —Ç–µ–±—è –æ—Å–æ–±—ã–µ –≤–Ω–µ—à–Ω–∏–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏? (–®—Ä–∞–º—ã, –±–æ—Ä–æ–¥–∞ –∏ —Ç. –¥.)')
    await state.set_state(Form.appearance)

@dp.message(Form.appearance)
async def process_appearance(msg: Message, state: FSMContext):
    await state.update_data(appearance=msg.text)
    await msg.answer('üé§ –£–∫–∞–∂–∏ —Å–≤–æ–∏ –Ω–∞–≤—ã–∫–∏ (–∞–∫—Ä–æ–±–∞—Ç–∏–∫–∞, –≤–æ–∫–∞–ª, —Ñ–µ—Ö—Ç–æ–≤–∞–Ω–∏–µ –∏ —Ç. –¥.)')
    await state.set_state(Form.skills)

@dp.message(Form.skills)
async def process_skills(msg: Message, state: FSMContext):
    await state.update_data(skills=msg.text)
    await msg.answer('üì∏ –û—Ç–ø—Ä–∞–≤—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–æ—Ç–æ (–¥–æ 3-—Ö —à—Ç—É–∫)')
    await state.set_state(Form.photos)

@dp.message(F.photo, Form.photos)
async def process_photos(msg: Message, state: FSMContext):
    data = await state.get_data()
    photos = data.get('photos', [])
    photos.append(msg.photo[-1].file_id)

    if len(photos) >= 3:
        await state.update_data(photos=photos)
        await msg.answer("üìΩ –•–æ—á–µ—à—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤–∏–¥–µ–æ–≤–∏–∑–∏—Ç–∫—É?", reply_markup=skip_kb)
        await state.set_state(Form.video)
    else:
        await state.update_data(photos=photos)
        await msg.answer('–û—Ç–ø—Ä–∞–≤—å –µ—â—ë —Ñ–æ—Ç–æ –∏–ª–∏ –Ω–∞–ø–∏—à–∏ /next, –µ—Å–ª–∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ.')

@dp.message(Command('next'))
async def skip_photos(msg: Message, state: FSMContext):
    await msg.answer('üìΩ –•–æ—á–µ—à—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤–∏–¥–µ–æ–≤–∏–∑–∏—Ç–∫—É?', reply_markup=skip_kb)
    await state.set_state(Form.video)

@dp.message(F.video, Form.video)
async def process_video(msg: Message, state: FSMContext):
    await state.update_data(video=msg.video.file_id)
    await msg.answer('üì± –í–≤–µ–¥–∏ —Å–≤–æ–∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, —Å–æ—Ü—Å–µ—Ç–∏)', reply_markup=ReplyKeyboardRemove())
    await state.set_state(Form.contacts)

@dp.message(Form.video)
async def skip_video(msg: Message, state: FSMContext):
    await msg.answer('üì± –í–≤–µ–¥–∏ —Å–≤–æ–∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, —Å–æ—Ü—Å–µ—Ç–∏)', reply_markup=ReplyKeyboardRemove())
    await state.set_state(Form.contacts)

@dp.message(Form.contacts)
async def process_contacts(msg: Message, state: FSMContext):
    await state.update_data(contacts=msg.text)
    data = await state.get_data()
    profile_text = f"""
üìõ *–ò–º—è:* {data.get('name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}
üìÖ *–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è:* {data.get('birth_date', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}
üöª *–ü–æ–ª:* {data.get('gender', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}
üèô *–ì–æ—Ä–æ–¥:* {data.get('city', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}
üìè *–†–æ—Å—Ç/–í–µ—Å:* {data.get('height_weight', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}
üé≠ *–ê–∫—Ç—ë—Ä—Å–∫–∏–π –æ–ø—ã—Ç:* {data.get('acting_experience', '–ù–µ—Ç')}
üßè‚Äç‚ôÇÔ∏è *–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:* {data.get('appearance', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}
üé§ *–ù–∞–≤—ã–∫–∏:* {data.get('skills', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}
üì± *–ö–æ–Ω—Ç–∞–∫—Ç—ã:* {data.get('contacts', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}
"""

    await msg.answer(profile_text, parse_mode='Markdown')
    await state.clear()


async def main():
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())
