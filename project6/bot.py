from aiogram import Dispatcher, F, Bot
from aiogram.types import Message, CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
import asyncio
import redis

bot = Bot(token = '8186742708:AAGn6fXRKFOw5-ms-AJqGFVxmlTkkIOfZbE')
dp = Dispatcher()

class Reg(StatesGroup):
    name = State()
    date = State()
    confirm = State()

@dp.message(Command('start'))
async def start_bot(msg : Message):
    await msg.answer('–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è. –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Å–µ–∞–Ω—Å –∏–ª–∏ —É–ø—Ä–∞–≤–ª—è—Ç—å —Å–≤–æ–∏–º–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è–º–∏. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /help –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π.')

@dp.message(Command('help'))
async def send_help(msg : Message):
    kb = InlineKeyboardMarkup(inline_keyboard=([
        [InlineKeyboardButton(text='üìÖ –ó–∞–ø–∏—Å—å –Ω–∞ —Å–µ–∞–Ω—Å', callback_data='record')],
        [InlineKeyboardButton(text='üõ† –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è–º–∏', callback_data='settings')],
        [InlineKeyboardButton(text='üí≥ –û–ø–ª–∞—Ç–∞ —É—Å–ª—É–≥', callback_data='payment')]
    ]))
    await msg.answer('–í–æ—Ç —á—Ç–æ —è —É–º–µ—é:', reply_markup=kb)
    await msg.answer('–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –æ–ø—Ü–∏—é')

@dp.callback_query(F.data == 'record')
async def registration(call : CallbackQuery, state : FSMContext):
    await state.set_state(Reg.name)
    await call.message.answer('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:')

@dp.message(Reg.name)
async def process_name(msg : Message, state : FSMContext):
    await state.update_data(name = msg.text)
    await state.set_state(Reg.date)
    await msg.answer('–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –¥–ª—è –∑–∞–ø–∏—Å–∏.')

@dp.message(Reg.date)
async def process_date(msg : Message, state : FSMContext):
    await state.update_data(date = msg.text)
    kb = ReplyKeyboardMarkup(keyboard=[
        [KeyboardButton(text = '–î–∞'), KeyboardButton(text = '–ù–µ—Ç')]
    ], resize_keyboard=True
    )
    await msg.answer('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∑–∞–ø–∏—Å—å:', reply_markup=kb)
    await state.set_state(Reg.confirm)

@dp.message(Reg.confirm)
async def confirm_reg(msg : Message, state : FSMContext):
    if msg.text.lower() == '–Ω–µ—Ç':
        await msg.answer('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞!', reply_markup=ReplyKeyboardRemove())
    else:
        data = await state.get_data()
        await msg.answer(f"–°–ø–∞—Å–∏–±–æ {data.get('name')}! –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –¥–∞—Ç—É: {data.get('date')}", reply_markup=ReplyKeyboardRemove())
    await state.clear()

async def main():
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())